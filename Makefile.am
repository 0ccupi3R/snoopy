### Include common Makefile configuration
#
include   $(top_srcdir)/build/Makefile.am.common



### Local configuration changes
#
AUTOMAKE_OPTIONS = foreign subdir-objects
ACLOCAL_AMFLAGS = -I build/m4



### Subdir processing order
#
# Process etc/ before other subdirs
#
# If snoopy has config file enabled, then there is a small time frame
# between installation of library and subsequent installation of
# initial configuration file where iniparser emits an error about
# configuration file not being found. Therefore we first install
# configuration file and only then the snoopy library itself.
#
# Also, lib/ must be processed before src/, as iniparser is needed
# there if config file is enabled.
#
SUBDIRS  =
if CONFIGFILE_ENABLED
SUBDIRS += etc
SUBDIRS += lib
endif
SUBDIRS += src
SUBDIRS += util
SUBDIRS += doc
SUBDIRS += tests



### Additional files to distribute in distribution package
#
EXTRA_DIST = \
	bootstrap.sh \
	README.md



### Make check aliases
#
checks: check
test:   check
tests:  check



### Enable/disable targets
#
enable: install
	echo ; \
	$(top_builddir)/util/snoopy-enable ; \
	echo ;

disable:
	echo ; \
	$(top_builddir)/util/snoopy-disable \
	echo ;

# Disable it if we are uninstalling it, to avoid error messages
# about missing library that should be preloaded.
uninstall-local: disable



### Clean these files additionally
#

# Clean release files
clean-local:
	rm -rf snoopy-[0-9].[0-9].* ; \
	rm -f  snoopy-*.tar.gz* ; \
	rm -f  snoopy-latest-*.txt ; \
	rm -rf cov-int* ;

# Clean all files that were generated by bootstrap.sh or autoscan
maintainer-clean-local:
	rm -f  aclocal.m4 ; \
	rm -f  autoscan.log ; \
	rm -fr build/aux/ ; \
	rm -fr build/m4/ ; \
	rm -f  configure ;



### Bootstrap target
#
# Simplify maintainer life
#
.PHONY: bootstrap
bootstrap: maintainer-clean
	./bootstrap.sh
